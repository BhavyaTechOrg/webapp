name: Packer AMI Build

on:
  push:
    branches:
      - main

jobs:
  packer-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build Application Artifact
        run: |
          mkdir -p packer/files
          zip -r packer/files/webapp.zip . -x "node_modules/*" -x ".git/*"

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Packer
        uses: hashicorp/setup-packer@v2

      - name: Debug AMI ID
        shell: pwsh
        run: |
          echo "AMI ID from GitHub Actions: ${{ vars.AMI_ID }}"

        # Set Environment Variables in CI
      - name: Set Environment Variables
        run: |
          echo "PKR_VAR_POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "PKR_VAR_POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "ami_id=${{ vars.AMI_ID }}" >> $GITHUB_ENV

      - name: Build AMI in AWS
        shell: pwsh
        run: |
          packer init packer/
          packer validate packer/
            -var "POSTGRES_USER=${{ vars.POSTGRES_USER }}" `
            -var "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" `
            -var "ami_id=${{ vars.AMI_ID }}" `
          packer build packer/
            -var "POSTGRES_USER=${{ vars.POSTGRES_USER }}" `
            -var "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" `
            -var "ami_id=${{ vars.AMI_ID }}" `
           
            
