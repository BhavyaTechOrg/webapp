name: Packer AMI & GCP Build

on:
  push:
    branches:
      - main  # Runs the workflow only when pushing to the "main" branch

jobs:
  packer-build:
    runs-on: ubuntu-latest  # Uses the latest Ubuntu runner in GitHub Actions

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run application tests
      - name: Run tests
        run: npm test

      # Create the webapp artifact (ZIP the project excluding unnecessary files)
      - name: Build Application Artifact
        run: |
          mkdir -p packer/files
          zip -r packer/files/webapp.zip . -x ".git/*" ".github/*" "node_modules/*"

      # AWS Authentication - Configure AWS CLI for Packer 
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Authenticate with GCP using service account credentials
      - name: Authenticate GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # Set the active GCP project
      - name: Configure GCP Project
        run: |
          gcloud config set project ${{ vars.GCP_PROJECT_ID }}

      # Install Packer
      - name: Set up Packer
        uses: hashicorp/setup-packer@v2

      # Debug: Display AMI ID and GCP Image Name
      - name: Debug AMI & Image Names
        shell: bash
        run: |
          echo "AMI ID from GitHub Actions: ${{ vars.AMI_ID }}"
          echo "GCP Image Name: ${{ vars.IMAGE_NAME }}"

      # Set environment variables for Packer
      - name: Set Environment Variables
        run: |
          echo "PKR_VAR_POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "PKR_VAR_POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "PKR_VAR_GCP_PROJECT_ID=${{ vars.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "PKR_VAR_IMAGE_NAME=${{ vars.IMAGE_NAME }}" >> $GITHUB_ENV
          echo "PKR_VAR_POSTGRESQL_HOST=${{ secrets.POSTGRESQL_HOST }}" >> $GITHUB_ENV
          echo "ami_id=${{ vars.AMI_ID }}" >> $GITHUB_ENV

      # Validate Packer Template
      - name: Packer Validate
        shell: bash
        run: |
          packer init packer/
          packer validate -var "ami_id=${{vars.AMI_ID}}" -var "POSTGRES_USER=${{secrets.POSTGRES_USER}}" -var "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" -var "GCP_PROJECT_ID=${{vars.GCP_PROJECT_ID}}" -var "IMAGE_NAME=${{vars.IMAGE_NAME}}"  packer/template.pkr.hcl

      # Build AMI
      - name: Build AMI
        shell: bash
        run: packer build -var "ami_id=${{vars.AMI_ID}}" -var "POSTGRES_USER=${{secrets.POSTGRES_USER}}" -var "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" -var "GCP_PROJECT_ID=${{vars.GCP_PROJECT_ID}}" -var "IMAGE_NAME=${{vars.IMAGE_NAME}}"  packer/template.pkr.hcl
