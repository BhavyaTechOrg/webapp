name: Packer Status Check

on:
  pull_request:
    branches:
      - main  # Runs on PRs to main

jobs:
  packer-status-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Packer
        uses: hashicorp/setup-packer@v2

      # Ensure Packer template exists before running checks
      - name: Check if Packer Template Exists
        run: |
          if [ ! -f packer/template.pkr.hcl ]; then
            echo "Packer template file not found!"
            exit 1
          fi

      # Ensure WebApp Artifact is Created Before Validation
      - name: Build WebApp Artifact
        run: |
          mkdir -p packer/files
          zip -r packer/files/webapp.zip . -x "node_modules/*" -x ".git/*"

      # Ensure correct formatting
      - name: Packer Format Check
        id: fmt
        run: packer fmt -check packer/template.pkr.hcl

      - name: Check if Packer Format Changed Files
        if: failure()  # Fails if formatting is incorrect
        run: |
          echo "Packer template is not formatted correctly. Run 'packer fmt' locally."
          exit 1

      # Initialize Packer before validation
      - name: Packer Init
        run: packer init packer/

      # Set Environment Variables in CI
      - name: Set Environment Variables
        run: |
          echo "PKR_VAR_POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "PKR_VAR_POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "ami_id=${{ vars.AMI_ID }}" >> $GITHUB_ENV

      # Validate the Packer template with secure environment variables
      - name: Packer Validate
        run: packer validate packer/template.pkr.hcl
       
